!function(exports){"use strict";var nullFunction=function(){},nullPlatform={getType:function(){return"null"},isSupported:function(){return!1},update:nullFunction},AnimFrameUpdateStrategy=function(requestAnimationFrame){var that=this,win=window;this.update=nullFunction,this.requestAnimationFrame=requestAnimationFrame||win.requestAnimationFrame||win.webkitRequestAnimationFrame||win.mozRequestAnimationFrame,this.tickFunction=function(){that.update(),that.startTicker()},this.startTicker=function(){that.requestAnimationFrame.apply(win,[that.tickFunction])}};AnimFrameUpdateStrategy.prototype.start=function(updateFunction){this.update=updateFunction||nullFunction,this.startTicker()};var ManualUpdateStrategy=function(){};ManualUpdateStrategy.prototype.update=nullFunction,ManualUpdateStrategy.prototype.start=function(updateFunction){this.update=updateFunction||nullFunction};var WebKitPlatform=function(listener,gamepadGetter){this.listener=listener,this.gamepadGetter=gamepadGetter,this.knownGamepads=[]};WebKitPlatform.factory=function(listener){var platform=nullPlatform,navigator=window&&window.navigator;return navigator&&(void 0!==navigator.webkitGamepads?platform=new WebKitPlatform(listener,(function(){return navigator.webkitGamepads})):void 0!==navigator.webkitGetGamepads&&(platform=new WebKitPlatform(listener,(function(){return navigator.webkitGetGamepads()})))),platform},WebKitPlatform.getType=function(){return"WebKit"},WebKitPlatform.prototype.getType=function(){return WebKitPlatform.getType()},WebKitPlatform.prototype.isSupported=function(){return!0},WebKitPlatform.prototype.update=function(){var gamepad,i,gamepads=Array.prototype.slice.call(this.gamepadGetter(),0);for(i=this.knownGamepads.length-1;i>=0;i--)gamepad=this.knownGamepads[i],gamepads.indexOf(gamepad)<0&&(this.knownGamepads.splice(i,1),this.listener._disconnect(gamepad));for(i=0;i<gamepads.length;i++)(gamepad=gamepads[i])&&this.knownGamepads.indexOf(gamepad)<0&&(this.knownGamepads.push(gamepad),this.listener._connect(gamepad))};var FirefoxPlatform=function(listener){this.listener=listener,window.addEventListener("gamepadconnected",(function(e){listener._connect(e.gamepad)})),window.addEventListener("gamepaddisconnected",(function(e){listener._disconnect(e.gamepad)}))};FirefoxPlatform.factory=function(listener){var platform=nullPlatform;return window&&void 0!==window.addEventListener&&(platform=new FirefoxPlatform(listener)),platform},FirefoxPlatform.getType=function(){return"Firefox"},FirefoxPlatform.prototype.getType=function(){return FirefoxPlatform.getType()},FirefoxPlatform.prototype.isSupported=function(){return!0},FirefoxPlatform.prototype.update=nullFunction;var Gamepad=function(updateStrategy){this.updateStrategy=updateStrategy||new AnimFrameUpdateStrategy,this.gamepads=[],this.listeners={},this.platform=nullPlatform,this.deadzone=.03,this.maximizeThreshold=.97};Gamepad.UpdateStrategies={AnimFrameUpdateStrategy:AnimFrameUpdateStrategy,ManualUpdateStrategy:ManualUpdateStrategy},Gamepad.PlatformFactories=[WebKitPlatform.factory,FirefoxPlatform.factory],Gamepad.Type={PLAYSTATION:"playstation",LOGITECH:"logitech",XBOX:"xbox",UNKNOWN:"unknown"},Gamepad.Event={CONNECTED:"connected",UNSUPPORTED:"unsupported",DISCONNECTED:"disconnected",TICK:"tick",BUTTON_DOWN:"button-down",BUTTON_UP:"button-up",AXIS_CHANGED:"axis-changed"},Gamepad.StandardButtons=["FACE_1","FACE_2","FACE_3","FACE_4","LEFT_TOP_SHOULDER","RIGHT_TOP_SHOULDER","LEFT_BOTTOM_SHOULDER","RIGHT_BOTTOM_SHOULDER","SELECT_BACK","START_FORWARD","LEFT_STICK","RIGHT_STICK","DPAD_UP","DPAD_DOWN","DPAD_LEFT","DPAD_RIGHT","HOME"],Gamepad.StandardAxes=["LEFT_STICK_X","LEFT_STICK_Y","RIGHT_STICK_X","RIGHT_STICK_Y"];var nullGetter,getControlName=function(names,index,extraPrefix){return index<names.length?names[index]:extraPrefix+(index-names.length+1)};Gamepad.StandardMapping={env:{},buttons:{byButton:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},axes:{byAxis:[0,1,2,3]}},Gamepad.Mappings=[{env:{platform:FirefoxPlatform.getType(),type:Gamepad.Type.PLAYSTATION},buttons:{byButton:[14,13,15,12,10,11,8,9,0,3,1,2,4,6,7,5,16]},axes:{byAxis:[0,1,2,3]}},{env:{platform:WebKitPlatform.getType(),type:Gamepad.Type.LOGITECH},buttons:{byButton:[1,2,0,3,4,5,6,7,8,9,10,11,11,12,13,14,10]},axes:{byAxis:[0,1,2,3]}},{env:{platform:FirefoxPlatform.getType(),type:Gamepad.Type.LOGITECH},buttons:{byButton:[0,1,2,3,4,5,-1,-1,6,7,8,9,11,12,13,14,10],byAxis:[-1,-1,-1,-1,-1,-1,[2,0,1],[2,0,-1]]},axes:{byAxis:[0,1,3,4]}}],Gamepad.prototype.init=function(){var platform=Gamepad.resolvePlatform(this),that=this;return this.platform=platform,this.updateStrategy.start((function(){that._update()})),platform.isSupported()},Gamepad.prototype.bind=function(event,listener){return void 0===this.listeners[event]&&(this.listeners[event]=[]),this.listeners[event].push(listener),this},Gamepad.prototype.unbind=function(type,listener){if(void 0!==type){if(void 0!==listener){if(void 0===this.listeners[type])return!1;for(var i=0;i<this.listeners[type].length;i++)if(this.listeners[type][i]===listener)return this.listeners[type].splice(i,1),!0;return!1}this.listeners[type]=[]}else this.listeners={}},Gamepad.prototype.count=function(){return this.gamepads.length},Gamepad.prototype._fire=function(event,data){if(void 0!==this.listeners[event])for(var i=0;i<this.listeners[event].length;i++)this.listeners[event][i].apply(this.listeners[event][i],[data])},Gamepad.getNullPlatform=function(){return Object.create(nullPlatform)},Gamepad.resolvePlatform=function(listener){var i,platform=nullPlatform;for(i=0;!platform.isSupported()&&i<Gamepad.PlatformFactories.length;i++)platform=Gamepad.PlatformFactories[i](listener);return platform},Gamepad.prototype._connect=function(gamepad){var count,i,mapping=this._resolveMapping(gamepad);for(gamepad.state={},gamepad.lastState={},gamepad.updater=[],count=mapping.buttons.byButton.length,i=0;i<count;i++)this._addButtonUpdater(gamepad,mapping,i);for(count=mapping.axes.byAxis.length,i=0;i<count;i++)this._addAxisUpdater(gamepad,mapping,i);this.gamepads[gamepad.index]=gamepad,this._fire(Gamepad.Event.CONNECTED,gamepad)},Gamepad.prototype._addButtonUpdater=function(gamepad,mapping,index){var updater,controlName=getControlName(Gamepad.StandardButtons,index,"EXTRA_BUTTON_"),getter=this._createButtonGetter(gamepad,mapping.buttons,index),that=this,buttonEventData={gamepad:gamepad,control:controlName};gamepad.state[controlName]=0,gamepad.lastState[controlName]=0,updater=function(){var value=getter(),lastValue=gamepad.lastState[controlName],isDown=value>.5,wasDown=lastValue>.5;gamepad.state[controlName]=value,isDown&&!wasDown?that._fire(Gamepad.Event.BUTTON_DOWN,Object.create(buttonEventData)):!isDown&&wasDown&&that._fire(Gamepad.Event.BUTTON_UP,Object.create(buttonEventData)),0!==value&&1!==value&&value!==lastValue&&that._fireAxisChangedEvent(gamepad,controlName,value),gamepad.lastState[controlName]=value},gamepad.updater.push(updater)},Gamepad.prototype._addAxisUpdater=function(gamepad,mapping,index){var updater,controlName=getControlName(Gamepad.StandardAxes,index,"EXTRA_AXIS_"),getter=this._createAxisGetter(gamepad,mapping.axes,index),that=this;gamepad.state[controlName]=0,gamepad.lastState[controlName]=0,updater=function(){var value=getter(),lastValue=gamepad.lastState[controlName];gamepad.state[controlName]=value,value!==lastValue&&that._fireAxisChangedEvent(gamepad,controlName,value),gamepad.lastState[controlName]=value},gamepad.updater.push(updater)},Gamepad.prototype._fireAxisChangedEvent=function(gamepad,controlName,value){var eventData={gamepad:gamepad,axis:controlName,value:value};this._fire(Gamepad.Event.AXIS_CHANGED,eventData)},Gamepad.prototype._createButtonGetter=(nullGetter=function(){return 0},function(gamepad,buttons,index){var entry,thing,getter=nullGetter,that=this;return-1!==(entry=buttons.byButton[index])?"number"==typeof entry&&entry<gamepad.buttons.length&&(getter=function(){return gamepad.buttons[entry]}):buttons.byAxis&&index<buttons.byAxis.length&&(entry=buttons.byAxis[index],thing=entry,"[object Array]"===Object.prototype.toString.call(thing)&&3==entry.length&&entry[0]<gamepad.axes.length&&(getter=function(valueGetter,from,to){var getter=nullGetter;return from<to?getter=function(){var range=to-from,value=valueGetter();return(value=(value-from)/range)<0?0:value}:to<from&&(getter=function(){var range=from-to,value=valueGetter();return(value=(value-to)/range)>1?0:1-value}),getter}(getter=function(){var value=gamepad.axes[entry[0]];return that._applyDeadzoneMaximize(value)},entry[1],entry[2]))),getter}),Gamepad.prototype._createAxisGetter=function(){var nullGetter=function(){return 0};return function(gamepad,axes,index){var entry,getter=nullGetter,that=this;return-1!==(entry=axes.byAxis[index])&&"number"==typeof entry&&entry<gamepad.axes.length&&(getter=function(){var value=gamepad.axes[entry];return that._applyDeadzoneMaximize(value)}),getter}}(),Gamepad.prototype._disconnect=function(gamepad){var i,newGamepads=[];for(void 0!==this.gamepads[gamepad.index]&&delete this.gamepads[gamepad.index],i=0;i<this.gamepads.length;i++)void 0!==this.gamepads[i]&&(newGamepads[i]=this.gamepads[i]);this.gamepads=newGamepads,this._fire(Gamepad.Event.DISCONNECTED,gamepad)},Gamepad.prototype._resolveControllerType=function(id){return-1!==(id=id.toLowerCase()).indexOf("playstation")?Gamepad.Type.PLAYSTATION:-1!==id.indexOf("logitech")||-1!==id.indexOf("wireless gamepad")?Gamepad.Type.LOGITECH:-1!==id.indexOf("xbox")||-1!==id.indexOf("360")?Gamepad.Type.XBOX:Gamepad.Type.UNKNOWN},Gamepad.prototype._resolveMapping=function(gamepad){var i,test,mappings=Gamepad.Mappings,mapping=null,env={platform:this.platform.getType(),type:this._resolveControllerType(gamepad.id)};for(i=0;!mapping&&i<mappings.length;i++)test=mappings[i],Gamepad.envMatchesFilter(test.env,env)&&(mapping=test);return mapping||Gamepad.StandardMapping},Gamepad.envMatchesFilter=function(filter,env){var field,result=!0;for(field in filter)filter[field]!==env[field]&&(result=!1);return result},Gamepad.prototype._update=function(){this.platform.update(),this.gamepads.forEach((function(gamepad){gamepad&&gamepad.updater.forEach((function(updater){updater()}))})),this.gamepads.length>0&&this._fire(Gamepad.Event.TICK,this.gamepads)},Gamepad.prototype._applyDeadzoneMaximize=function(value,deadzone,maximizeThreshold){return deadzone=void 0!==deadzone?deadzone:this.deadzone,maximizeThreshold=void 0!==maximizeThreshold?maximizeThreshold:this.maximizeThreshold,value>=0?value<deadzone?value=0:value>maximizeThreshold&&(value=1):value>-deadzone?value=0:value<-maximizeThreshold&&(value=-1),value},exports.Gamepad=Gamepad}("undefined"!=typeof module&&module.exports||window);